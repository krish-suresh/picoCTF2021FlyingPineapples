
vuln:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	insb   (%dx),%es:(%rdi)
  40023a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  400246:	78 2d                	js     400275 <_init-0x2a3>
  400248:	78 38                	js     400282 <_init-0x296>
  40024a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
  400250:	6f                   	outsl  %ds:(%rsi),(%dx)
  400251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    $0x0,%al
  400256:	00 00                	add    %al,(%rax)
  400258:	10 00                	adc    %al,(%rax)
  40025a:	00 00                	add    %al,(%rax)
  40025c:	01 00                	add    %eax,(%rax)
  40025e:	00 00                	add    %al,(%rax)
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push %rbp
  400263:	00 00                	add    %al,(%rax)
  400265:	00 00                	add    %al,(%rax)
  400267:	00 03                	add    %al,(%rbx)
  400269:	00 00                	add    %al,(%rax)
  40026b:	00 02                	add    %al,(%rdx)
  40026d:	00 00                	add    %al,(%rax)
  40026f:	00 00                	add    %al,(%rax)
  400271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    $0x0,%al
  400276:	00 00                	add    %al,(%rax)
  400278:	14 00                	adc    $0x0,%al
  40027a:	00 00                	add    %al,(%rax)
  40027c:	03 00                	add    (%rax),%eax
  40027e:	00 00                	add    %al,(%rax)
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push %rbp
  400283:	00 e5                	add    %ah,%ch
  400285:	db a3 e6 ed 29 e4    	(bad)  -0x1bd6121a(%rbx)
  40028b:	57                   	push   %rdi
  40028c:	cd 10                	int    $0x10
  40028e:	4a cc                	rex.WX int3 
  400290:	b2 79                	mov    $0x79,%dl
  400292:	e1 27                	loope  4002bb <_init-0x25d>
  400294:	28 5e ec             	sub    %bl,-0x14(%rsi)
  400297:	d0                   	.byte 0xd0

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	02 00                	add    (%rax),%al
  40029a:	00 00                	add    %al,(%rax)
  40029c:	08 00                	or     %al,(%rax)
  40029e:	00 00                	add    %al,(%rax)
  4002a0:	01 00                	add    %eax,(%rax)
  4002a2:	00 00                	add    %al,(%rax)
  4002a4:	06                   	(bad)  
	...
  4002ad:	01 10                	add    %edx,(%rax)
  4002af:	00 08                	add    %cl,(%rax)
  4002b1:	00 00                	add    %al,(%rax)
  4002b3:	00 00                	add    %al,(%rax)
  4002b5:	00 00                	add    %al,(%rax)
  4002b7:	00 29                	add    %ch,(%rcx)
  4002b9:	1d                   	.byte 0x1d
  4002ba:	8c                   	.byte 0x8c
  4002bb:	1c                   	.byte 0x1c

Disassembly of section .dynsym:

00000000004002c0 <.dynsym>:
	...
  4002d8:	1a 00                	sbb    (%rax),%al
  4002da:	00 00                	add    %al,(%rax)
  4002dc:	12 00                	adc    (%rax),%al
	...
  4002ee:	00 00                	add    %al,(%rax)
  4002f0:	26 00 00             	add    %al,%es:(%rax)
  4002f3:	00 12                	add    %dl,(%rdx)
	...
  400305:	00 00                	add    %al,(%rax)
  400307:	00 38                	add    %bh,(%rax)
  400309:	00 00                	add    %al,(%rax)
  40030b:	00 12                	add    %dl,(%rdx)
	...
  40031d:	00 00                	add    %al,(%rax)
  40031f:	00 3f                	add    %bh,(%rdi)
  400321:	00 00                	add    %al,(%rax)
  400323:	00 12                	add    %dl,(%rdx)
	...
  400335:	00 00                	add    %al,(%rax)
  400337:	00 6a 00             	add    %ch,0x0(%rdx)
  40033a:	00 00                	add    %al,(%rax)
  40033c:	20 00                	and    %al,(%rax)
	...
  40034e:	00 00                	add    %al,(%rax)
  400350:	30 00                	xor    %al,(%rax)
  400352:	00 00                	add    %al,(%rax)
  400354:	12 00                	adc    (%rax),%al
	...
  400366:	00 00                	add    %al,(%rax)
  400368:	0b 00                	or     (%rax),%eax
  40036a:	00 00                	add    %al,(%rax)
  40036c:	12 00                	adc    (%rax),%al
	...
  40037e:	00 00                	add    %al,(%rax)
  400380:	1f                   	(bad)  
  400381:	00 00                	add    %al,(%rax)
  400383:	00 11                	add    %dl,(%rcx)
  400385:	00 18                	add    %bl,(%rax)
  400387:	00 50 10             	add    %dl,0x10(%rax)
  40038a:	60                   	(bad)  
  40038b:	00 00                	add    %al,(%rax)
  40038d:	00 00                	add    %al,(%rax)
  40038f:	00 08                	add    %cl,(%rax)
  400391:	00 00                	add    %al,(%rax)
  400393:	00 00                	add    %al,(%rax)
  400395:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynstr:

0000000000400398 <.dynstr>:
  400398:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  40039c:	63 2e                	movslq (%rsi),%ebp
  40039e:	73 6f                	jae    40040f <_init-0x109>
  4003a0:	2e 36 00 5f 5f       	cs add %bl,%ss:0x5f(%rdi)
  4003a5:	69 73 6f 63 39 39 5f 	imul   $0x5f393963,0x6f(%rbx),%esi
  4003ac:	73 63                	jae    400411 <_init-0x107>
  4003ae:	61                   	(bad)  
  4003af:	6e                   	outsb  %ds:(%rsi),(%dx)
  4003b0:	66 00 70 75          	data16 add %dh,0x75(%rax)
  4003b4:	74 73                	je     400429 <_init-0xef>
  4003b6:	00 73 74             	add    %dh,0x74(%rbx)
  4003b9:	64 6f                	outsl  %fs:(%rsi),(%dx)
  4003bb:	75 74                	jne    400431 <_init-0xe7>
  4003bd:	00 73 65             	add    %dh,0x65(%rbx)
  4003c0:	74 72                	je     400434 <_init-0xe4>
  4003c2:	65 73 67             	gs jae 40042c <_init-0xec>
  4003c5:	69 64 00 67 65 74 65 	imul   $0x67657465,0x67(%rax,%rax,1),%esp
  4003cc:	67 
  4003cd:	69 64 00 73 65 74 62 	imul   $0x75627465,0x73(%rax,%rax,1),%esp
  4003d4:	75 
  4003d5:	66 00 5f 5f          	data16 add %bl,0x5f(%rdi)
  4003d9:	6c                   	insb   (%dx),%es:(%rdi)
  4003da:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  4003e1:	72 74                	jb     400457 <_init-0xc1>
  4003e3:	5f                   	pop    %rdi
  4003e4:	6d                   	insl   (%dx),%es:(%rdi)
  4003e5:	61                   	(bad)  
  4003e6:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
  4003ed:	43 5f                	rex.XB pop %r15
  4003ef:	32 2e                	xor    (%rsi),%ch
  4003f1:	37                   	(bad)  
  4003f2:	00 47 4c             	add    %al,0x4c(%rdi)
  4003f5:	49                   	rex.WB
  4003f6:	42                   	rex.X
  4003f7:	43 5f                	rex.XB pop %r15
  4003f9:	32 2e                	xor    (%rsi),%ch
  4003fb:	32 2e                	xor    (%rsi),%ch
  4003fd:	35 00 2e 2f 00       	xor    $0x2f2e00,%eax
  400402:	5f                   	pop    %rdi
  400403:	5f                   	pop    %rdi
  400404:	67 6d                	insl   (%dx),%es:(%edi)
  400406:	6f                   	outsl  %ds:(%rsi),(%dx)
  400407:	6e                   	outsb  %ds:(%rsi),(%dx)
  400408:	5f                   	pop    %rdi
  400409:	73 74                	jae    40047f <_init-0x99>
  40040b:	61                   	(bad)  
  40040c:	72 74                	jb     400482 <_init-0x96>
  40040e:	5f                   	pop    %rdi
  40040f:	5f                   	pop    %rdi
	...

Disassembly of section .gnu.version:

0000000000400412 <.gnu.version>:
  400412:	00 00                	add    %al,(%rax)
  400414:	02 00                	add    (%rax),%al
  400416:	02 00                	add    (%rax),%al
  400418:	02 00                	add    (%rax),%al
  40041a:	02 00                	add    (%rax),%al
  40041c:	00 00                	add    %al,(%rax)
  40041e:	02 00                	add    (%rax),%al
  400420:	03 00                	add    (%rax),%eax
  400422:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000400428 <.gnu.version_r>:
  400428:	01 00                	add    %eax,(%rax)
  40042a:	02 00                	add    (%rax),%al
  40042c:	01 00                	add    %eax,(%rax)
  40042e:	00 00                	add    %al,(%rax)
  400430:	10 00                	adc    %al,(%rax)
  400432:	00 00                	add    %al,(%rax)
  400434:	00 00                	add    %al,(%rax)
  400436:	00 00                	add    %al,(%rax)
  400438:	17                   	(bad)  
  400439:	69 69 0d 00 00 03 00 	imul   $0x30000,0xd(%rcx),%ebp
  400440:	51                   	push   %rcx
  400441:	00 00                	add    %al,(%rax)
  400443:	00 10                	add    %dl,(%rax)
  400445:	00 00                	add    %al,(%rax)
  400447:	00 75 1a             	add    %dh,0x1a(%rbp)
  40044a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  400450:	5b                   	pop    %rbx
  400451:	00 00                	add    %al,(%rax)
  400453:	00 00                	add    %al,(%rax)
  400455:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000400458 <.rela.dyn>:
  400458:	f0 0f 60 00          	lock punpcklbw (%rax),%mm0
  40045c:	00 00                	add    %al,(%rax)
  40045e:	00 00                	add    %al,(%rax)
  400460:	06                   	(bad)  
  400461:	00 00                	add    %al,(%rax)
  400463:	00 04 00             	add    %al,(%rax,%rax,1)
	...
  40046e:	00 00                	add    %al,(%rax)
  400470:	f8                   	clc    
  400471:	0f 60 00             	punpcklbw (%rax),%mm0
  400474:	00 00                	add    %al,(%rax)
  400476:	00 00                	add    %al,(%rax)
  400478:	06                   	(bad)  
  400479:	00 00                	add    %al,(%rax)
  40047b:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 400481 <_init-0x97>
  400481:	00 00                	add    %al,(%rax)
  400483:	00 00                	add    %al,(%rax)
  400485:	00 00                	add    %al,(%rax)
  400487:	00 50 10             	add    %dl,0x10(%rax)
  40048a:	60                   	(bad)  
  40048b:	00 00                	add    %al,(%rax)
  40048d:	00 00                	add    %al,(%rax)
  40048f:	00 05 00 00 00 08    	add    %al,0x8000000(%rip)        # 8400495 <_end+0x7dff435>
	...

Disassembly of section .rela.plt:

00000000004004a0 <.rela.plt>:
  4004a0:	18 10                	sbb    %dl,(%rax)
  4004a2:	60                   	(bad)  
  4004a3:	00 00                	add    %al,(%rax)
  4004a5:	00 00                	add    %al,(%rax)
  4004a7:	00 07                	add    %al,(%rdi)
  4004a9:	00 00                	add    %al,(%rax)
  4004ab:	00 01                	add    %al,(%rcx)
	...
  4004b5:	00 00                	add    %al,(%rax)
  4004b7:	00 20                	add    %ah,(%rax)
  4004b9:	10 60 00             	adc    %ah,0x0(%rax)
  4004bc:	00 00                	add    %al,(%rax)
  4004be:	00 00                	add    %al,(%rax)
  4004c0:	07                   	(bad)  
  4004c1:	00 00                	add    %al,(%rax)
  4004c3:	00 02                	add    %al,(%rdx)
	...
  4004cd:	00 00                	add    %al,(%rax)
  4004cf:	00 28                	add    %ch,(%rax)
  4004d1:	10 60 00             	adc    %ah,0x0(%rax)
  4004d4:	00 00                	add    %al,(%rax)
  4004d6:	00 00                	add    %al,(%rax)
  4004d8:	07                   	(bad)  
  4004d9:	00 00                	add    %al,(%rax)
  4004db:	00 03                	add    %al,(%rbx)
	...
  4004e5:	00 00                	add    %al,(%rax)
  4004e7:	00 30                	add    %dh,(%rax)
  4004e9:	10 60 00             	adc    %ah,0x0(%rax)
  4004ec:	00 00                	add    %al,(%rax)
  4004ee:	00 00                	add    %al,(%rax)
  4004f0:	07                   	(bad)  
  4004f1:	00 00                	add    %al,(%rax)
  4004f3:	00 06                	add    %al,(%rsi)
	...
  4004fd:	00 00                	add    %al,(%rax)
  4004ff:	00 38                	add    %bh,(%rax)
  400501:	10 60 00             	adc    %ah,0x0(%rax)
  400504:	00 00                	add    %al,(%rax)
  400506:	00 00                	add    %al,(%rax)
  400508:	07                   	(bad)  
  400509:	00 00                	add    %al,(%rax)
  40050b:	00 07                	add    %al,(%rdi)
	...

Disassembly of section .init:

0000000000400518 <_init>:
  400518:	48 83 ec 08          	sub    $0x8,%rsp
  40051c:	48 8b 05 d5 0a 20 00 	mov    0x200ad5(%rip),%rax        # 600ff8 <__gmon_start__>
  400523:	48 85 c0             	test   %rax,%rax
  400526:	74 02                	je     40052a <_init+0x12>
  400528:	ff d0                	callq  *%rax
  40052a:	48 83 c4 08          	add    $0x8,%rsp
  40052e:	c3                   	retq   

Disassembly of section .plt:

0000000000400530 <.plt>:
  400530:	ff 35 d2 0a 20 00    	pushq  0x200ad2(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400536:	ff 25 d4 0a 20 00    	jmpq   *0x200ad4(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40053c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400540 <puts@plt>:
  400540:	ff 25 d2 0a 20 00    	jmpq   *0x200ad2(%rip)        # 601018 <puts@GLIBC_2.2.5>
  400546:	68 00 00 00 00       	pushq  $0x0
  40054b:	e9 e0 ff ff ff       	jmpq   400530 <.plt>

0000000000400550 <setresgid@plt>:
  400550:	ff 25 ca 0a 20 00    	jmpq   *0x200aca(%rip)        # 601020 <setresgid@GLIBC_2.2.5>
  400556:	68 01 00 00 00       	pushq  $0x1
  40055b:	e9 d0 ff ff ff       	jmpq   400530 <.plt>

0000000000400560 <setbuf@plt>:
  400560:	ff 25 c2 0a 20 00    	jmpq   *0x200ac2(%rip)        # 601028 <setbuf@GLIBC_2.2.5>
  400566:	68 02 00 00 00       	pushq  $0x2
  40056b:	e9 c0 ff ff ff       	jmpq   400530 <.plt>

0000000000400570 <getegid@plt>:
  400570:	ff 25 ba 0a 20 00    	jmpq   *0x200aba(%rip)        # 601030 <getegid@GLIBC_2.2.5>
  400576:	68 03 00 00 00       	pushq  $0x3
  40057b:	e9 b0 ff ff ff       	jmpq   400530 <.plt>

0000000000400580 <__isoc99_scanf@plt>:
  400580:	ff 25 b2 0a 20 00    	jmpq   *0x200ab2(%rip)        # 601038 <__isoc99_scanf@GLIBC_2.7>
  400586:	68 04 00 00 00       	pushq  $0x4
  40058b:	e9 a0 ff ff ff       	jmpq   400530 <.plt>

Disassembly of section .text:

0000000000400590 <_start>:
  400590:	31 ed                	xor    %ebp,%ebp
  400592:	49 89 d1             	mov    %rdx,%r9
  400595:	5e                   	pop    %rsi
  400596:	48 89 e2             	mov    %rsp,%rdx
  400599:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40059d:	50                   	push   %rax
  40059e:	54                   	push   %rsp
  40059f:	49 c7 c0 20 09 40 00 	mov    $0x400920,%r8
  4005a6:	48 c7 c1 b0 08 40 00 	mov    $0x4008b0,%rcx
  4005ad:	48 c7 c7 71 07 40 00 	mov    $0x400771,%rdi
  4005b4:	ff 15 36 0a 20 00    	callq  *0x200a36(%rip)        # 600ff0 <__libc_start_main@GLIBC_2.2.5>
  4005ba:	f4                   	hlt    
  4005bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004005c0 <_dl_relocate_static_pie>:
  4005c0:	f3 c3                	repz retq 
  4005c2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4005c9:	00 00 00 
  4005cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004005d0 <deregister_tm_clones>:
  4005d0:	55                   	push   %rbp
  4005d1:	b8 50 10 60 00       	mov    $0x601050,%eax
  4005d6:	48 3d 50 10 60 00    	cmp    $0x601050,%rax
  4005dc:	48 89 e5             	mov    %rsp,%rbp
  4005df:	74 17                	je     4005f8 <deregister_tm_clones+0x28>
  4005e1:	b8 00 00 00 00       	mov    $0x0,%eax
  4005e6:	48 85 c0             	test   %rax,%rax
  4005e9:	74 0d                	je     4005f8 <deregister_tm_clones+0x28>
  4005eb:	5d                   	pop    %rbp
  4005ec:	bf 50 10 60 00       	mov    $0x601050,%edi
  4005f1:	ff e0                	jmpq   *%rax
  4005f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4005f8:	5d                   	pop    %rbp
  4005f9:	c3                   	retq   
  4005fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400600 <register_tm_clones>:
  400600:	be 50 10 60 00       	mov    $0x601050,%esi
  400605:	55                   	push   %rbp
  400606:	48 81 ee 50 10 60 00 	sub    $0x601050,%rsi
  40060d:	48 89 e5             	mov    %rsp,%rbp
  400610:	48 c1 fe 03          	sar    $0x3,%rsi
  400614:	48 89 f0             	mov    %rsi,%rax
  400617:	48 c1 e8 3f          	shr    $0x3f,%rax
  40061b:	48 01 c6             	add    %rax,%rsi
  40061e:	48 d1 fe             	sar    %rsi
  400621:	74 15                	je     400638 <register_tm_clones+0x38>
  400623:	b8 00 00 00 00       	mov    $0x0,%eax
  400628:	48 85 c0             	test   %rax,%rax
  40062b:	74 0b                	je     400638 <register_tm_clones+0x38>
  40062d:	5d                   	pop    %rbp
  40062e:	bf 50 10 60 00       	mov    $0x601050,%edi
  400633:	ff e0                	jmpq   *%rax
  400635:	0f 1f 00             	nopl   (%rax)
  400638:	5d                   	pop    %rbp
  400639:	c3                   	retq   
  40063a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400640 <__do_global_dtors_aux>:
  400640:	80 3d 11 0a 20 00 00 	cmpb   $0x0,0x200a11(%rip)        # 601058 <completed.7698>
  400647:	75 17                	jne    400660 <__do_global_dtors_aux+0x20>
  400649:	55                   	push   %rbp
  40064a:	48 89 e5             	mov    %rsp,%rbp
  40064d:	e8 7e ff ff ff       	callq  4005d0 <deregister_tm_clones>
  400652:	c6 05 ff 09 20 00 01 	movb   $0x1,0x2009ff(%rip)        # 601058 <completed.7698>
  400659:	5d                   	pop    %rbp
  40065a:	c3                   	retq   
  40065b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400660:	f3 c3                	repz retq 
  400662:	0f 1f 40 00          	nopl   0x0(%rax)
  400666:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40066d:	00 00 00 

0000000000400670 <frame_dummy>:
  400670:	55                   	push   %rbp
  400671:	48 89 e5             	mov    %rsp,%rbp
  400674:	5d                   	pop    %rbp
  400675:	eb 89                	jmp    400600 <register_tm_clones>

0000000000400677 <convert_case>:
  400677:	55                   	push   %rbp
  400678:	48 89 e5             	mov    %rsp,%rbp
  40067b:	89 f8                	mov    %edi,%eax
  40067d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  400681:	88 45 fc             	mov    %al,-0x4(%rbp)
  400684:	80 7d fc 60          	cmpb   $0x60,-0x4(%rbp)
  400688:	7e 21                	jle    4006ab <convert_case+0x34>
  40068a:	80 7d fc 7a          	cmpb   $0x7a,-0x4(%rbp)
  40068e:	7f 1b                	jg     4006ab <convert_case+0x34>
  400690:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400694:	83 e0 01             	and    $0x1,%eax
  400697:	48 85 c0             	test   %rax,%rax
  40069a:	74 06                	je     4006a2 <convert_case+0x2b>
  40069c:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
  4006a0:	eb 34                	jmp    4006d6 <convert_case+0x5f>
  4006a2:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
  4006a6:	83 e8 20             	sub    $0x20,%eax
  4006a9:	eb 2b                	jmp    4006d6 <convert_case+0x5f>
  4006ab:	80 7d fc 40          	cmpb   $0x40,-0x4(%rbp)
  4006af:	7e 21                	jle    4006d2 <convert_case+0x5b>
  4006b1:	80 7d fc 5a          	cmpb   $0x5a,-0x4(%rbp)
  4006b5:	7f 1b                	jg     4006d2 <convert_case+0x5b>
  4006b7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4006bb:	83 e0 01             	and    $0x1,%eax
  4006be:	48 85 c0             	test   %rax,%rax
  4006c1:	74 09                	je     4006cc <convert_case+0x55>
  4006c3:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
  4006c7:	83 c0 20             	add    $0x20,%eax
  4006ca:	eb 0a                	jmp    4006d6 <convert_case+0x5f>
  4006cc:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
  4006d0:	eb 04                	jmp    4006d6 <convert_case+0x5f>
  4006d2:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
  4006d6:	5d                   	pop    %rbp
  4006d7:	c3                   	retq   

00000000004006d8 <do_stuff>:
  4006d8:	55                   	push   %rbp
  4006d9:	48 89 e5             	mov    %rsp,%rbp
  4006dc:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
  4006e3:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  4006ea:	00 
  4006eb:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  4006ef:	48 89 c6             	mov    %rax,%rsi
  4006f2:	48 8d 3d 3b 02 00 00 	lea    0x23b(%rip),%rdi        # 400934 <_IO_stdin_used+0x4>
  4006f9:	b8 00 00 00 00       	mov    $0x0,%eax
  4006fe:	e8 7d fe ff ff       	callq  400580 <__isoc99_scanf@plt>
  400703:	48 8d 85 7f ff ff ff 	lea    -0x81(%rbp),%rax
  40070a:	48 89 c6             	mov    %rax,%rsi
  40070d:	48 8d 3d 26 02 00 00 	lea    0x226(%rip),%rdi        # 40093a <_IO_stdin_used+0xa>
  400714:	b8 00 00 00 00       	mov    $0x0,%eax
  400719:	e8 62 fe ff ff       	callq  400580 <__isoc99_scanf@plt>
  40071e:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  400725:	00 
  400726:	eb 33                	jmp    40075b <do_stuff+0x83>
  400728:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
  40072c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400730:	48 01 d0             	add    %rdx,%rax
  400733:	0f b6 00             	movzbl (%rax),%eax
  400736:	0f be c0             	movsbl %al,%eax
  400739:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40073d:	48 89 d6             	mov    %rdx,%rsi
  400740:	89 c7                	mov    %eax,%edi
  400742:	e8 30 ff ff ff       	callq  400677 <convert_case>
  400747:	89 c1                	mov    %eax,%ecx
  400749:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
  40074d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400751:	48 01 d0             	add    %rdx,%rax
  400754:	88 08                	mov    %cl,(%rax)
  400756:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  40075b:	48 83 7d f8 63       	cmpq   $0x63,-0x8(%rbp)
  400760:	76 c6                	jbe    400728 <do_stuff+0x50>
  400762:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  400766:	48 89 c7             	mov    %rax,%rdi
  400769:	e8 d2 fd ff ff       	callq  400540 <puts@plt>
  40076e:	90                   	nop
  40076f:	c9                   	leaveq 
  400770:	c3                   	retq   

0000000000400771 <main>:
  400771:	55                   	push   %rbp
  400772:	48 89 e5             	mov    %rsp,%rbp
  400775:	41 57                	push   %r15
  400777:	41 56                	push   %r14
  400779:	41 55                	push   %r13
  40077b:	41 54                	push   %r12
  40077d:	48 83 ec 60          	sub    $0x60,%rsp
  400781:	89 7d 8c             	mov    %edi,-0x74(%rbp)
  400784:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
  400788:	48 8b 05 c1 08 20 00 	mov    0x2008c1(%rip),%rax        # 601050 <stdout@@GLIBC_2.2.5>
  40078f:	be 00 00 00 00       	mov    $0x0,%esi
  400794:	48 89 c7             	mov    %rax,%rdi
  400797:	e8 c4 fd ff ff       	callq  400560 <setbuf@plt>
  40079c:	e8 cf fd ff ff       	callq  400570 <getegid@plt>
  4007a1:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  4007a4:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  4007a7:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
  4007aa:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  4007ad:	89 ce                	mov    %ecx,%esi
  4007af:	89 c7                	mov    %eax,%edi
  4007b1:	b8 00 00 00 00       	mov    $0x0,%eax
  4007b6:	e8 95 fd ff ff       	callq  400550 <setresgid@plt>
  4007bb:	48 c7 45 c8 1b 00 00 	movq   $0x1b,-0x38(%rbp)
  4007c2:	00 
  4007c3:	48 b8 57 65 6c 63 6f 	movabs $0x20656d6f636c6557,%rax
  4007ca:	6d 65 20 
  4007cd:	48 ba 74 6f 20 6d 79 	movabs $0x636520796d206f74,%rdx
  4007d4:	20 65 63 
  4007d7:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  4007db:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  4007df:	48 b8 68 6f 20 73 65 	movabs $0x6576726573206f68,%rax
  4007e6:	72 76 65 
  4007e9:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  4007ed:	66 c7 45 a8 72 21    	movw   $0x2172,-0x58(%rbp)
  4007f3:	c6 45 aa 00          	movb   $0x0,-0x56(%rbp)
  4007f7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4007fb:	48 89 c2             	mov    %rax,%rdx
  4007fe:	48 83 ea 01          	sub    $0x1,%rdx
  400802:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
  400806:	49 89 c6             	mov    %rax,%r14
  400809:	41 bf 00 00 00 00    	mov    $0x0,%r15d
  40080f:	49 89 c4             	mov    %rax,%r12
  400812:	41 bd 00 00 00 00    	mov    $0x0,%r13d
  400818:	ba 10 00 00 00       	mov    $0x10,%edx
  40081d:	48 83 ea 01          	sub    $0x1,%rdx
  400821:	48 01 d0             	add    %rdx,%rax
  400824:	b9 10 00 00 00       	mov    $0x10,%ecx
  400829:	ba 00 00 00 00       	mov    $0x0,%edx
  40082e:	48 f7 f1             	div    %rcx
  400831:	48 6b c0 10          	imul   $0x10,%rax,%rax
  400835:	48 29 c4             	sub    %rax,%rsp
  400838:	48 89 e0             	mov    %rsp,%rax
  40083b:	48 83 c0 00          	add    $0x0,%rax
  40083f:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  400843:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
  40084a:	00 
  40084b:	eb 33                	jmp    400880 <main+0x10f>
  40084d:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
  400851:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400855:	48 01 d0             	add    %rdx,%rax
  400858:	0f b6 00             	movzbl (%rax),%eax
  40085b:	0f be c0             	movsbl %al,%eax
  40085e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  400862:	48 89 d6             	mov    %rdx,%rsi
  400865:	89 c7                	mov    %eax,%edi
  400867:	e8 0b fe ff ff       	callq  400677 <convert_case>
  40086c:	89 c1                	mov    %eax,%ecx
  40086e:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  400872:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400876:	48 01 d0             	add    %rdx,%rax
  400879:	88 08                	mov    %cl,(%rax)
  40087b:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
  400880:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400884:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
  400888:	72 c3                	jb     40084d <main+0xdc>
  40088a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40088e:	48 89 c7             	mov    %rax,%rdi
  400891:	e8 aa fc ff ff       	callq  400540 <puts@plt>
  400896:	b8 00 00 00 00       	mov    $0x0,%eax
  40089b:	e8 38 fe ff ff       	callq  4006d8 <do_stuff>
  4008a0:	eb f4                	jmp    400896 <main+0x125>
  4008a2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4008a9:	00 00 00 
  4008ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004008b0 <__libc_csu_init>:
  4008b0:	41 57                	push   %r15
  4008b2:	41 56                	push   %r14
  4008b4:	49 89 d7             	mov    %rdx,%r15
  4008b7:	41 55                	push   %r13
  4008b9:	41 54                	push   %r12
  4008bb:	4c 8d 25 3e 05 20 00 	lea    0x20053e(%rip),%r12        # 600e00 <__frame_dummy_init_array_entry>
  4008c2:	55                   	push   %rbp
  4008c3:	48 8d 2d 3e 05 20 00 	lea    0x20053e(%rip),%rbp        # 600e08 <__init_array_end>
  4008ca:	53                   	push   %rbx
  4008cb:	41 89 fd             	mov    %edi,%r13d
  4008ce:	49 89 f6             	mov    %rsi,%r14
  4008d1:	4c 29 e5             	sub    %r12,%rbp
  4008d4:	48 83 ec 08          	sub    $0x8,%rsp
  4008d8:	48 c1 fd 03          	sar    $0x3,%rbp
  4008dc:	e8 37 fc ff ff       	callq  400518 <_init>
  4008e1:	48 85 ed             	test   %rbp,%rbp
  4008e4:	74 20                	je     400906 <__libc_csu_init+0x56>
  4008e6:	31 db                	xor    %ebx,%ebx
  4008e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4008ef:	00 
  4008f0:	4c 89 fa             	mov    %r15,%rdx
  4008f3:	4c 89 f6             	mov    %r14,%rsi
  4008f6:	44 89 ef             	mov    %r13d,%edi
  4008f9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4008fd:	48 83 c3 01          	add    $0x1,%rbx
  400901:	48 39 dd             	cmp    %rbx,%rbp
  400904:	75 ea                	jne    4008f0 <__libc_csu_init+0x40>
  400906:	48 83 c4 08          	add    $0x8,%rsp
  40090a:	5b                   	pop    %rbx
  40090b:	5d                   	pop    %rbp
  40090c:	41 5c                	pop    %r12
  40090e:	41 5d                	pop    %r13
  400910:	41 5e                	pop    %r14
  400912:	41 5f                	pop    %r15
  400914:	c3                   	retq   
  400915:	90                   	nop
  400916:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40091d:	00 00 00 

0000000000400920 <__libc_csu_fini>:
  400920:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400924 <_fini>:
  400924:	48 83 ec 08          	sub    $0x8,%rsp
  400928:	48 83 c4 08          	add    $0x8,%rsp
  40092c:	c3                   	retq   

Disassembly of section .rodata:

0000000000400930 <_IO_stdin_used>:
  400930:	01 00                	add    %eax,(%rax)
  400932:	02 00                	add    (%rax),%al
  400934:	25 5b 5e 0a 5d       	and    $0x5d0a5e5b,%eax
  400939:	00                   	.byte 0x0
  40093a:	25                   	.byte 0x25
  40093b:	63 00                	movslq (%rax),%eax

Disassembly of section .eh_frame_hdr:

0000000000400940 <__GNU_EH_FRAME_HDR>:
  400940:	01 1b                	add    %ebx,(%rbx)
  400942:	03 3b                	add    (%rbx),%edi
  400944:	4c 00 00             	rex.WR add %r8b,(%rax)
  400947:	00 08                	add    %cl,(%rax)
  400949:	00 00                	add    %al,(%rax)
  40094b:	00 f0                	add    %dh,%al
  40094d:	fb                   	sti    
  40094e:	ff                   	(bad)  
  40094f:	ff a8 00 00 00 50    	ljmp   *0x50000000(%rax)
  400955:	fc                   	cld    
  400956:	ff                   	(bad)  
  400957:	ff 68 00             	ljmp   *0x0(%rax)
  40095a:	00 00                	add    %al,(%rax)
  40095c:	80 fc ff             	cmp    $0xff,%ah
  40095f:	ff 94 00 00 00 37 fd 	callq  *-0x2c90000(%rax,%rax,1)
  400966:	ff                   	(bad)  
  400967:	ff d0                	callq  *%rax
  400969:	00 00                	add    %al,(%rax)
  40096b:	00 98 fd ff ff f0    	add    %bl,-0xf000003(%rax)
  400971:	00 00                	add    %al,(%rax)
  400973:	00 31                	add    %dh,(%rcx)
  400975:	fe                   	(bad)  
  400976:	ff                   	(bad)  
  400977:	ff 10                	callq  *(%rax)
  400979:	01 00                	add    %eax,(%rax)
  40097b:	00 70 ff             	add    %dh,-0x1(%rax)
  40097e:	ff                   	(bad)  
  40097f:	ff                   	(bad)  
  400980:	38 01                	cmp    %al,(%rcx)
  400982:	00 00                	add    %al,(%rax)
  400984:	e0 ff                	loopne 400985 <__GNU_EH_FRAME_HDR+0x45>
  400986:	ff                   	(bad)  
  400987:	ff                   	.byte 0xff
  400988:	80 01 00             	addb   $0x0,(%rcx)
	...

Disassembly of section .eh_frame:

0000000000400990 <__FRAME_END__-0x144>:
  400990:	14 00                	adc    $0x0,%al
  400992:	00 00                	add    %al,(%rax)
  400994:	00 00                	add    %al,(%rax)
  400996:	00 00                	add    %al,(%rax)
  400998:	01 7a 52             	add    %edi,0x52(%rdx)
  40099b:	00 01                	add    %al,(%rcx)
  40099d:	78 10                	js     4009af <__GNU_EH_FRAME_HDR+0x6f>
  40099f:	01 1b                	add    %ebx,(%rbx)
  4009a1:	0c 07                	or     $0x7,%al
  4009a3:	08 90 01 07 10 10    	or     %dl,0x10100701(%rax)
  4009a9:	00 00                	add    %al,(%rax)
  4009ab:	00 1c 00             	add    %bl,(%rax,%rax,1)
  4009ae:	00 00                	add    %al,(%rax)
  4009b0:	e0 fb                	loopne 4009ad <__GNU_EH_FRAME_HDR+0x6d>
  4009b2:	ff                   	(bad)  
  4009b3:	ff 2b                	ljmp   *(%rbx)
  4009b5:	00 00                	add    %al,(%rax)
  4009b7:	00 00                	add    %al,(%rax)
  4009b9:	00 00                	add    %al,(%rax)
  4009bb:	00 14 00             	add    %dl,(%rax,%rax,1)
  4009be:	00 00                	add    %al,(%rax)
  4009c0:	00 00                	add    %al,(%rax)
  4009c2:	00 00                	add    %al,(%rax)
  4009c4:	01 7a 52             	add    %edi,0x52(%rdx)
  4009c7:	00 01                	add    %al,(%rcx)
  4009c9:	78 10                	js     4009db <__GNU_EH_FRAME_HDR+0x9b>
  4009cb:	01 1b                	add    %ebx,(%rbx)
  4009cd:	0c 07                	or     $0x7,%al
  4009cf:	08 90 01 00 00 10    	or     %dl,0x10000001(%rax)
  4009d5:	00 00                	add    %al,(%rax)
  4009d7:	00 1c 00             	add    %bl,(%rax,%rax,1)
  4009da:	00 00                	add    %al,(%rax)
  4009dc:	e4 fb                	in     $0xfb,%al
  4009de:	ff                   	(bad)  
  4009df:	ff 02                	incl   (%rdx)
  4009e1:	00 00                	add    %al,(%rax)
  4009e3:	00 00                	add    %al,(%rax)
  4009e5:	00 00                	add    %al,(%rax)
  4009e7:	00 24 00             	add    %ah,(%rax,%rax,1)
  4009ea:	00 00                	add    %al,(%rax)
  4009ec:	30 00                	xor    %al,(%rax)
  4009ee:	00 00                	add    %al,(%rax)
  4009f0:	40 fb                	rex sti 
  4009f2:	ff                   	(bad)  
  4009f3:	ff 60 00             	jmpq   *0x0(%rax)
  4009f6:	00 00                	add    %al,(%rax)
  4009f8:	00 0e                	add    %cl,(%rsi)
  4009fa:	10 46 0e             	adc    %al,0xe(%rsi)
  4009fd:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  400a00:	0b 77 08             	or     0x8(%rdi),%esi
  400a03:	80 00 3f             	addb   $0x3f,(%rax)
  400a06:	1a 3b                	sbb    (%rbx),%bh
  400a08:	2a 33                	sub    (%rbx),%dh
  400a0a:	24 22                	and    $0x22,%al
  400a0c:	00 00                	add    %al,(%rax)
  400a0e:	00 00                	add    %al,(%rax)
  400a10:	1c 00                	sbb    $0x0,%al
  400a12:	00 00                	add    %al,(%rax)
  400a14:	58                   	pop    %rax
  400a15:	00 00                	add    %al,(%rax)
  400a17:	00 5f fc             	add    %bl,-0x4(%rdi)
  400a1a:	ff                   	(bad)  
  400a1b:	ff 61 00             	jmpq   *0x0(%rcx)
  400a1e:	00 00                	add    %al,(%rax)
  400a20:	00 41 0e             	add    %al,0xe(%rcx)
  400a23:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400a29:	02 5c 0c 07          	add    0x7(%rsp,%rcx,1),%bl
  400a2d:	08 00                	or     %al,(%rax)
  400a2f:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400a32:	00 00                	add    %al,(%rax)
  400a34:	78 00                	js     400a36 <__GNU_EH_FRAME_HDR+0xf6>
  400a36:	00 00                	add    %al,(%rax)
  400a38:	a0 fc ff ff 99 00 00 	movabs 0x99fffffc,%al
  400a3f:	00 00 
  400a41:	41 0e                	rex.B (bad) 
  400a43:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400a49:	02 94 0c 07 08 00 00 	add    0x807(%rsp,%rcx,1),%dl
  400a50:	24 00                	and    $0x0,%al
  400a52:	00 00                	add    %al,(%rax)
  400a54:	98                   	cwtl   
  400a55:	00 00                	add    %al,(%rax)
  400a57:	00 19                	add    %bl,(%rcx)
  400a59:	fd                   	std    
  400a5a:	ff                   	(bad)  
  400a5b:	ff 31                	pushq  (%rcx)
  400a5d:	01 00                	add    %eax,(%rax)
  400a5f:	00 00                	add    %al,(%rax)
  400a61:	41 0e                	rex.B (bad) 
  400a63:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400a69:	4c 8f 03             	rex.WR popq (%rbx)
  400a6c:	8e 04 8d 05 8c 06 00 	mov    0x68c05(,%rcx,4),%es
  400a73:	00 00                	add    %al,(%rax)
  400a75:	00 00                	add    %al,(%rax)
  400a77:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
  400a7b:	00 c0                	add    %al,%al
  400a7d:	00 00                	add    %al,(%rax)
  400a7f:	00 30                	add    %dh,(%rax)
  400a81:	fe                   	(bad)  
  400a82:	ff                   	(bad)  
  400a83:	ff 65 00             	jmpq   *0x0(%rbp)
  400a86:	00 00                	add    %al,(%rax)
  400a88:	00 42 0e             	add    %al,0xe(%rdx)
  400a8b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
  400a91:	8e 03                	mov    (%rbx),%es
  400a93:	45 0e                	rex.RB (bad) 
  400a95:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
  400a9b:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff867018e9 <_end+0xffffffff86100889>
  400aa1:	06                   	(bad)  
  400aa2:	48 0e                	rex.W (bad) 
  400aa4:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
  400aaa:	72 0e                	jb     400aba <__GNU_EH_FRAME_HDR+0x17a>
  400aac:	38 41 0e             	cmp    %al,0xe(%rcx)
  400aaf:	30 41 0e             	xor    %al,0xe(%rcx)
  400ab2:	28 42 0e             	sub    %al,0xe(%rdx)
  400ab5:	20 42 0e             	and    %al,0xe(%rdx)
  400ab8:	18 42 0e             	sbb    %al,0xe(%rdx)
  400abb:	10 42 0e             	adc    %al,0xe(%rdx)
  400abe:	08 00                	or     %al,(%rax)
  400ac0:	10 00                	adc    %al,(%rax)
  400ac2:	00 00                	add    %al,(%rax)
  400ac4:	08 01                	or     %al,(%rcx)
  400ac6:	00 00                	add    %al,(%rax)
  400ac8:	58                   	pop    %rax
  400ac9:	fe                   	(bad)  
  400aca:	ff                   	(bad)  
  400acb:	ff 02                	incl   (%rdx)
  400acd:	00 00                	add    %al,(%rax)
  400acf:	00 00                	add    %al,(%rax)
  400ad1:	00 00                	add    %al,(%rax)
	...

0000000000400ad4 <__FRAME_END__>:
  400ad4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000600e00 <__frame_dummy_init_array_entry>:
  600e00:	70 06                	jo     600e08 <__init_array_end>
  600e02:	40 00 00             	add    %al,(%rax)
  600e05:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000600e08 <__do_global_dtors_aux_fini_array_entry>:
  600e08:	40 06                	rex (bad) 
  600e0a:	40 00 00             	add    %al,(%rax)
  600e0d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000600e10 <_DYNAMIC>:
  600e10:	01 00                	add    %eax,(%rax)
  600e12:	00 00                	add    %al,(%rax)
  600e14:	00 00                	add    %al,(%rax)
  600e16:	00 00                	add    %al,(%rax)
  600e18:	01 00                	add    %eax,(%rax)
  600e1a:	00 00                	add    %al,(%rax)
  600e1c:	00 00                	add    %al,(%rax)
  600e1e:	00 00                	add    %al,(%rax)
  600e20:	1d 00 00 00 00       	sbb    $0x0,%eax
  600e25:	00 00                	add    %al,(%rax)
  600e27:	00 67 00             	add    %ah,0x0(%rdi)
  600e2a:	00 00                	add    %al,(%rax)
  600e2c:	00 00                	add    %al,(%rax)
  600e2e:	00 00                	add    %al,(%rax)
  600e30:	0c 00                	or     $0x0,%al
  600e32:	00 00                	add    %al,(%rax)
  600e34:	00 00                	add    %al,(%rax)
  600e36:	00 00                	add    %al,(%rax)
  600e38:	18 05 40 00 00 00    	sbb    %al,0x40(%rip)        # 600e7e <_DYNAMIC+0x6e>
  600e3e:	00 00                	add    %al,(%rax)
  600e40:	0d 00 00 00 00       	or     $0x0,%eax
  600e45:	00 00                	add    %al,(%rax)
  600e47:	00 24 09             	add    %ah,(%rcx,%rcx,1)
  600e4a:	40 00 00             	add    %al,(%rax)
  600e4d:	00 00                	add    %al,(%rax)
  600e4f:	00 19                	add    %bl,(%rcx)
	...
  600e59:	0e                   	(bad)  
  600e5a:	60                   	(bad)  
  600e5b:	00 00                	add    %al,(%rax)
  600e5d:	00 00                	add    %al,(%rax)
  600e5f:	00 1b                	add    %bl,(%rbx)
  600e61:	00 00                	add    %al,(%rax)
  600e63:	00 00                	add    %al,(%rax)
  600e65:	00 00                	add    %al,(%rax)
  600e67:	00 08                	add    %cl,(%rax)
  600e69:	00 00                	add    %al,(%rax)
  600e6b:	00 00                	add    %al,(%rax)
  600e6d:	00 00                	add    %al,(%rax)
  600e6f:	00 1a                	add    %bl,(%rdx)
  600e71:	00 00                	add    %al,(%rax)
  600e73:	00 00                	add    %al,(%rax)
  600e75:	00 00                	add    %al,(%rax)
  600e77:	00 08                	add    %cl,(%rax)
  600e79:	0e                   	(bad)  
  600e7a:	60                   	(bad)  
  600e7b:	00 00                	add    %al,(%rax)
  600e7d:	00 00                	add    %al,(%rax)
  600e7f:	00 1c 00             	add    %bl,(%rax,%rax,1)
  600e82:	00 00                	add    %al,(%rax)
  600e84:	00 00                	add    %al,(%rax)
  600e86:	00 00                	add    %al,(%rax)
  600e88:	08 00                	or     %al,(%rax)
  600e8a:	00 00                	add    %al,(%rax)
  600e8c:	00 00                	add    %al,(%rax)
  600e8e:	00 00                	add    %al,(%rax)
  600e90:	f5                   	cmc    
  600e91:	fe                   	(bad)  
  600e92:	ff 6f 00             	ljmp   *0x0(%rdi)
  600e95:	00 00                	add    %al,(%rax)
  600e97:	00 98 02 40 00 00    	add    %bl,0x4002(%rax)
  600e9d:	00 00                	add    %al,(%rax)
  600e9f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 600ea5 <_DYNAMIC+0x95>
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 98 03 40 00 00    	add    %bl,0x4003(%rax)
  600ead:	00 00                	add    %al,(%rax)
  600eaf:	00 06                	add    %al,(%rsi)
  600eb1:	00 00                	add    %al,(%rax)
  600eb3:	00 00                	add    %al,(%rax)
  600eb5:	00 00                	add    %al,(%rax)
  600eb7:	00 c0                	add    %al,%al
  600eb9:	02 40 00             	add    0x0(%rax),%al
  600ebc:	00 00                	add    %al,(%rax)
  600ebe:	00 00                	add    %al,(%rax)
  600ec0:	0a 00                	or     (%rax),%al
  600ec2:	00 00                	add    %al,(%rax)
  600ec4:	00 00                	add    %al,(%rax)
  600ec6:	00 00                	add    %al,(%rax)
  600ec8:	79 00                	jns    600eca <_DYNAMIC+0xba>
  600eca:	00 00                	add    %al,(%rax)
  600ecc:	00 00                	add    %al,(%rax)
  600ece:	00 00                	add    %al,(%rax)
  600ed0:	0b 00                	or     (%rax),%eax
  600ed2:	00 00                	add    %al,(%rax)
  600ed4:	00 00                	add    %al,(%rax)
  600ed6:	00 00                	add    %al,(%rax)
  600ed8:	18 00                	sbb    %al,(%rax)
  600eda:	00 00                	add    %al,(%rax)
  600edc:	00 00                	add    %al,(%rax)
  600ede:	00 00                	add    %al,(%rax)
  600ee0:	15 00 00 00 00       	adc    $0x0,%eax
	...
  600eed:	00 00                	add    %al,(%rax)
  600eef:	00 03                	add    %al,(%rbx)
	...
  600ef9:	10 60 00             	adc    %ah,0x0(%rax)
  600efc:	00 00                	add    %al,(%rax)
  600efe:	00 00                	add    %al,(%rax)
  600f00:	02 00                	add    (%rax),%al
  600f02:	00 00                	add    %al,(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	78 00                	js     600f0a <_DYNAMIC+0xfa>
  600f0a:	00 00                	add    %al,(%rax)
  600f0c:	00 00                	add    %al,(%rax)
  600f0e:	00 00                	add    %al,(%rax)
  600f10:	14 00                	adc    $0x0,%al
  600f12:	00 00                	add    %al,(%rax)
  600f14:	00 00                	add    %al,(%rax)
  600f16:	00 00                	add    %al,(%rax)
  600f18:	07                   	(bad)  
  600f19:	00 00                	add    %al,(%rax)
  600f1b:	00 00                	add    %al,(%rax)
  600f1d:	00 00                	add    %al,(%rax)
  600f1f:	00 17                	add    %dl,(%rdi)
  600f21:	00 00                	add    %al,(%rax)
  600f23:	00 00                	add    %al,(%rax)
  600f25:	00 00                	add    %al,(%rax)
  600f27:	00 a0 04 40 00 00    	add    %ah,0x4004(%rax)
  600f2d:	00 00                	add    %al,(%rax)
  600f2f:	00 07                	add    %al,(%rdi)
  600f31:	00 00                	add    %al,(%rax)
  600f33:	00 00                	add    %al,(%rax)
  600f35:	00 00                	add    %al,(%rax)
  600f37:	00 58 04             	add    %bl,0x4(%rax)
  600f3a:	40 00 00             	add    %al,(%rax)
  600f3d:	00 00                	add    %al,(%rax)
  600f3f:	00 08                	add    %cl,(%rax)
  600f41:	00 00                	add    %al,(%rax)
  600f43:	00 00                	add    %al,(%rax)
  600f45:	00 00                	add    %al,(%rax)
  600f47:	00 48 00             	add    %cl,0x0(%rax)
  600f4a:	00 00                	add    %al,(%rax)
  600f4c:	00 00                	add    %al,(%rax)
  600f4e:	00 00                	add    %al,(%rax)
  600f50:	09 00                	or     %eax,(%rax)
  600f52:	00 00                	add    %al,(%rax)
  600f54:	00 00                	add    %al,(%rax)
  600f56:	00 00                	add    %al,(%rax)
  600f58:	18 00                	sbb    %al,(%rax)
  600f5a:	00 00                	add    %al,(%rax)
  600f5c:	00 00                	add    %al,(%rax)
  600f5e:	00 00                	add    %al,(%rax)
  600f60:	fe                   	(bad)  
  600f61:	ff                   	(bad)  
  600f62:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f65:	00 00                	add    %al,(%rax)
  600f67:	00 28                	add    %ch,(%rax)
  600f69:	04 40                	add    $0x40,%al
  600f6b:	00 00                	add    %al,(%rax)
  600f6d:	00 00                	add    %al,(%rax)
  600f6f:	00 ff                	add    %bh,%bh
  600f71:	ff                   	(bad)  
  600f72:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f75:	00 00                	add    %al,(%rax)
  600f77:	00 01                	add    %al,(%rcx)
  600f79:	00 00                	add    %al,(%rax)
  600f7b:	00 00                	add    %al,(%rax)
  600f7d:	00 00                	add    %al,(%rax)
  600f7f:	00 f0                	add    %dh,%al
  600f81:	ff                   	(bad)  
  600f82:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f85:	00 00                	add    %al,(%rax)
  600f87:	00 12                	add    %dl,(%rdx)
  600f89:	04 40                	add    $0x40,%al
	...

Disassembly of section .got:

0000000000600ff0 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	10 0e                	adc    %cl,(%rsi)
  601002:	60                   	(bad)  
	...
  601017:	00 46 05             	add    %al,0x5(%rsi)
  60101a:	40 00 00             	add    %al,(%rax)
  60101d:	00 00                	add    %al,(%rax)
  60101f:	00 56 05             	add    %dl,0x5(%rsi)
  601022:	40 00 00             	add    %al,(%rax)
  601025:	00 00                	add    %al,(%rax)
  601027:	00 66 05             	add    %ah,0x5(%rsi)
  60102a:	40 00 00             	add    %al,(%rax)
  60102d:	00 00                	add    %al,(%rax)
  60102f:	00 76 05             	add    %dh,0x5(%rsi)
  601032:	40 00 00             	add    %al,(%rax)
  601035:	00 00                	add    %al,(%rax)
  601037:	00 86 05 40 00 00    	add    %al,0x4005(%rsi)
  60103d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000601040 <__data_start>:
	...

0000000000601048 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601050 <stdout@@GLIBC_2.2.5>:
	...

0000000000601058 <completed.7698>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x4004a0>
   a:	74 75                	je     81 <_init-0x400497>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 35 2e 30 2d 33    	cs xor $0x332d302e,%eax
  14:	75 62                	jne    78 <_init-0x4004a0>
  16:	75 6e                	jne    86 <_init-0x400492>
  18:	74 75                	je     8f <_init-0x400489>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	38 2e                	cmp    %ch,(%rsi)
  1f:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  22:	20 37                	and    %dh,(%rdi)
  24:	2e                   	cs
  25:	35                   	.byte 0x35
  26:	2e 30 00             	xor    %al,%cs:(%rax)
